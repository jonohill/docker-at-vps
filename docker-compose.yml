version: '3.7'

networks:
    backup: {}
    code: {}
    ytdlp: {}
    vaultwarden: {}

# Images which require special regex handling for renovate
x-images:
    # Hardcodes version 3 because only 3 version parts are supported
    # renovate: versioning=regex:^3\.(?<major>\d+)\.(?<minor>\d+)\.(?<patch>\d+)-ls\d+$
    - &SONARR_IMAGE linuxserver/sonarr:3.0.6.1265-ls111

services:

    # ~~~~~~~~~~~~ 
    # Server admin
    # ~~~~~~~~~~~~ 

    compose_up:
        image: jonoh/compose-up:v0.0.5
        restart: always
        environment:
            - DOCKER_HOST=unix:///var/run/docker.sock
        volumes:
            - /home/ubuntu/compose:/compose
            - /var/run/docker.sock:/var/run/docker.sock
        command: git pull

    cloudflare_compose_up:
        image: jonoh/cloudflared:2022.3.0
        restart: always
        volumes:
            - /mnt/data/cloudflare_compose_up:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://compose_up:8080
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=compose-up
            - TUNNEL_ID=${COMPOSE_UP_TUNNEL_ID}
            - TUNNEL_SECRET=${COMPOSE_UP_TUNNEL_SECRET}

    compose_forever:
        image: jonoh/compose-up:v0.0.5
        restart: always
        environment:
            - DOCKER_HOST=unix:///var/run/docker.sock
        volumes:
            - /home/ubuntu/compose:/compose
            - /var/run/docker.sock:/var/run/docker.sock
        entrypoint: /compose/forever.sh

    # tailscale:
    #     image: jonoh/tailscale:1.18.1
    #     devices:
    #         - /dev/net/tun:/dev/net/tun
    #     volumes:
    #         - /mnt/data/tailscale:/var/lib/tailscale
    #     network_mode: host
    #     privileged: true
    #     environment:
    #         - AUTH_KEY=${TAILSCALE_AUTH_KEY}
    #     command: --hostname=larry --exit-node
    #     restart: always

    cloudflare_ssh:
        image: jonoh/cloudflared:2022.3.0
        restart: always
        network_mode: host
        volumes:
            - /mnt/data/cloudflare_ssh:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=ssh://localhost:22
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=larry
            - TUNNEL_ID=${SSH_TUNNEL_ID}
            - TUNNEL_SECRET=${SSH_TUNNEL_SECRET}

    # rclone_serve_backup:
    #     image: rclone/rclone:1.57.0
    #     volumes:
    #         - /mnt/data/rclone_serve_backup:/config
    #         - /tmp/caches/rclone_serve_backup:/root/.cache
    #         - /home/ubuntu/compose/config/rclone_serve_backup/entrypoint.sh:/entrypoint.sh
    #     entrypoint: /entrypoint.sh
    #     environment: 
    #         - RCLONE_CONFIG_SEED=${RCLONE_CONFIG_SEED}
    #         - RCLONE_SOURCE=jotta:/backup
    #     restart: always
    #     networks:
    #         - backup

    # duplicacy:
    #     image: jonoh/duplicacy:2.7.2
    #     environment:
    #         - BACKUP_CRON=1 * * * *
    #         - RUN_JOB_IMMEDIATELY=yes
    #         - PRUNE_CRON=34 1 * * sun
    #         - SNAPSHOT_ID=larry
    #         - DUPLICACY_PASSWORD=${DUPLICACY_PASSWORD}
    #         - STORAGE_URL=sftp://rclone_serve_backup:2022//duplicacy
    #         - JOB_RANDOM_DELAY=300
    #         - PRUNE_KEEP_POLICIES=0:360;30:180;7:30;1:7
    #         - PRE_BACKUP_SCRIPT=/usr/local/bin/pre_backup.sh
    #     volumes:
    #         - /mnt/data:/data
    #         - /mnt/data/duplicacy_naspool/config:/config
    #         - /home/ubuntu/compose/config/duplicacy/pre_backup.sh:/usr/local/bin/pre_backup.sh
    #     restart: always
    #     networks:
    #         - backup

    autoheal:
        image: willfarrell/autoheal:1.2.0
        restart: always
        environment: 
            - AUTOHEAL_CONTAINER_LABEL=all
            - AUTOHEAL_INTERVAL=15
            - AUTOHEAL_DEFAULT_STOP_TIMEOUT=60
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    # ~~~~~
    # Media
    # ~~~~~ 

    # plex:
    #     image: jonoh/nas-plex:v0.0.56
    #     restart: always
    #     labels:
    #         - autoheal=true
    #     environment:
    #         - TZ=Pacific/Auckland
    #         - HOSTNAME=larry
    #         - PLEX_CLAIM=${PLEX_CLAIM}
    #         - INCOMING_DIR=/data/incoming
    #         - RCLONE_MOUNT_DIR=jotta:/plex-media
    #         - RCLONE_MOUNT_CACHE_DIR=/caches/rclone_plex
    #         - RCLONE_MOUNT_TARGET=/data/plex-media
    #         - RCLONE_CACHE_MAX_SIZE=25G
    #         # Antennas
    #         - ANTENNAS_URL=http://localhost:5004
    #         - TVHEADEND_URL=http://vpn_tvheadend:9981
    #         - TUNER_COUNT=6
    #         - DEVICE_UUID=7fb55421-ebfc-4fef-966e-30a706dd4c9e
    #     ports: 
    #         - 32400:32400
    #     volumes:
    #         - /mnt/data/plex:/config
    #         - /tmp/plex-transcode:/transcode
    #         - /tmp:/tmp
    #         - /tmp/caches/plex:/caches/rclone_plex
    #     cap_add:
    #         - SYS_ADMIN
    #     devices:
    #         - /dev/fuse
    #     security_opt:
    #         - apparmor:unconfined
    #     healthcheck:
    #         start_period: 120s

    # cloudflare_plex:
    #     image: jonoh/cloudflared:2022.2.1
    #     restart: always
    #     volumes:
    #         - /mnt/data/cloudflare_plex:/config
    #     environment:
    #         - TZ=Pacific/Auckland
    #         - TUNNEL_URL=http://plex:32400
    #         - ACCOUNT_ID=${CF_ACCOUNT_ID}
    #         - TUNNEL_NAME=plex
    #         - TUNNEL_ID=${PLEX_TUNNEL_ID}
    #         - TUNNEL_SECRET=${PLEX_TUNNEL_SECRET}        

    # rclone_move_media:
    #     image: rclone/rclone:1.57.0
    #     volumes:
    #         - /mnt/data/tmp/plex-media:/source
    #         - /mnt/data/rclone_move_media:/config
    #         - /home/ubuntu/compose/config/rclone_move_media/entrypoint:/entrypoint
    #     environment:
    #         - RCLONE_CONFIG_SEED=${RCLONE_MOVE_MEDIA_CONF}
    #         - SOURCE=/source
    #         - DEST=jotta:/plex-media
    #     entrypoint: /entrypoint
    #     restart: always

    # filebot:
    #     image: jonoh/nas-filebot:v0.0.10
    #     environment:
    #         - TZ=Pacific/Auckland
    #         - LANG=C.UTF-8
    #     volumes:
    #         - /mnt/data/filebot:/config
    #         - /mnt/data/downloads:/input
    #         - /mnt/data/tmp/plex-media:/output
    #     restart: always

    # transmission:
    #     image: haugene/transmission-openvpn:4.0
    #     restart: always
    #     labels:
    #         - autoheal=true
    #     cap_add:
    #         - NET_ADMIN
    #     volumes:
    #         - /mnt/data/bt:/data/transmission-home
    #         - /mnt/data/downloads-incomplete:/data/incomplete
    #         - /mnt/data/downloads:/data/completed
    #         - /home/ubuntu/compose/config/ovpn/config.ovpn:/etc/openvpn/custom/default.ovpn
    #     environment:
    #         - TZ=Pacific/Auckland
    #         - OPENVPN_PROVIDER=custom
    #         - OPENVPN_USERNAME=${VPN_USERNAME}
    #         - OPENVPN_PASSWORD=${VPN_PASSWORD}
    #         - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=1

    # cloudflare_transmission:
    #     image: jonoh/cloudflared:2022.2.1
    #     restart: always
    #     volumes:
    #         - /mnt/data/cloudflare_transmission:/config
    #     environment:
    #         - TZ=Pacific/Auckland
    #         - TUNNEL_URL=http://transmission:9091
    #         - ACCOUNT_ID=${CF_ACCOUNT_ID}
    #         - TUNNEL_NAME=transmission
    #         - TUNNEL_ID=${TRANSMISSION_TUNNEL_ID}
    #         - TUNNEL_SECRET=${TRANSMISSION_TUNNEL_SECRET}
    
    # transmission_cleanup:
    #     image: jonoh/transmission-cleanup:v0.0.18
    #     restart: always
    #     volumes:
    #         - /mnt/data/downloads:/cleanup
    #     environment: 
    #         - TRANSMISSION_HOST=transmission

    # ~~
    # TV
    # ~~

    # vpn_tvheadend:
    #     image: qmcgaw/gluetun:v3.27.0
    #     container_name: vpn_tvheadend
    #     restart: always
    #     cap_add:
    #         - NET_ADMIN
    #     labels:
    #         - autoheal=true
    #     environment:
    #         - VPNSP=surfshark
    #         - OPENVPN_USER=${VPN_USERNAME}
    #         - OPENVPN_PASSWORD=${VPN_PASSWORD}
    #         - SERVER_HOSTNAME=nz-akl.prod.surfshark.com
    #         - HTTPPROXY=on

    # tvheadend:
    #     image: lscr.io/linuxserver/tvheadend
    #     container_name: tvheadend
    #     restart: always    
    #     labels:
    #         - autoheal=true         
    #     network_mode: "service:vpn_tvheadend"
    #     environment:
    #         - PUID=1000
    #         - PGID=1000
    #         - TZ=Pacific/Auckland
    #     volumes:
    #         - /mnt/data/tvheadend:/config
    #     healthcheck:
    #         test: curl -f https://tvheadend.hillnz.com || exit 1
    #         interval: 30s
    #         timeout: 10s
    #         retries: 1
    #         start_period: 30s

    # cloudflare_tvheadend:
    #     image: jonoh/cloudflared:2022.2.1
    #     restart: always
    #     volumes:
    #         - /mnt/data/cloudflare_tvheadend:/config
    #     environment:
    #         - TZ=Pacific/Auckland
    #         - TUNNEL_URL=http://vpn_tvheadend:9981
    #         - ACCOUNT_ID=${CF_ACCOUNT_ID}
    #         - TUNNEL_NAME=tvheadend
    #         - TUNNEL_ID=${TV_TUNNEL_ID}
    #         - TUNNEL_SECRET=${TV_TUNNEL_SECRET}


    # ~~~~~
    # Other
    # ~~~~~

    postgres:
        image: postgres:13.6
        volumes:
            - /mnt/data/postgresql/13/data:/var/lib/postgresql/data
        restart: always

    # pgadmin:
    #     image: dpage/pgadmin4:6.1
    #     restart: always
    #     environment:
    #         - TZ=Pacific/Auckland
    #         - PGADMIN_DEFAULT_EMAIL=admin@example.com
    #         - PGADMIN_DEFAULT_PASSWORD=password
    #         - PGADMIN_DISABLE_POSTFIX=True
    #     volumes:
    #         - /mnt/data/pgadmin:/var/lib/pgadmin

    # cloudflare_pgadmin:
    #     image: jonoh/cloudflared:2022.2.1
    #     restart: always
    #     environment:
    #         - TZ=Pacific/Auckland
    #         - TUNNEL_URL=http://pgadmin:80
    #         - ACCOUNT_ID=${CF_ACCOUNT_ID}
    #         - TUNNEL_NAME=pgadmin
    #         - TUNNEL_ID=${PGADMIN_TUNNEL_ID}
    #         - TUNNEL_SECRET=${PGADMIN_TUNNEL_SECRET}
    #     volumes:
    #         - /mnt/data/cloudflare_pgadmin:/config        

    radio_db:
        image: jonoh/radio_db:0.3.28
        container_name: radio_db
        environment:
            - RDB_DATABASE_HOST=postgres
            - RDB_DATABASE_NAME=radio_db
            - RDB_DATABASE_USERNAME=radio_db
            - RDB_DATABASE_PASSWORD=${RDB_DB_PASSWORD}
            - RDB_SPOTIFY_CLIENT_ID=${RDB_SPOTIFY_CLIENT_ID}
            - RDB_SPOTIFY_CLIENT_SECRET=${RDB_SPOTIFY_CLIENT_SECRET}
            - RDB_SPOTIFY_AUTH_SEED=${RDB_SPOTIFY_AUTH_SEED}
        volumes:
            - /mnt/data/radio_db/config.yml:/app/config.yml
        restart: always

    twitterdedupe-redis:
        image: redis:6.2.6
        volumes:
            - /mnt/data/twitterdedupe:/data
        command: redis-server --appendonly yes
        restart: always

    twitterdedupe-verge:
        image: jonoh/twitter-dedupe:0.7.2
        environment:
            - TWITTER_CONSUMER_KEY=${TWITTER_CONSUMER_KEY}
            - TWITTER_CONSUMER_SECRET=${TWITTER_CONSUMER_SECRET}
            - TWITTER_ACCESS_TOKEN=${TWITTER_ACCESS_TOKEN}
            - TWITTER_ACCESS_TOKEN_SECRET=${TWITTER_ACCESS_TOKEN_SECRET}
            - REDISTOGO_URL=redis://twitterdedupe-redis:6379
            - TWITTER_SCREEN_NAME=thevergelite
            - RETWEET=1
            - WAIT_INTERVAL=300 # Time to wait between polls, in seconds
            - LOG_LEVEL=WARN # Or INFO, OR DEBUG, etc.
        restart: always

    # webtop:
    #     image: jonoh/nas-webtop:2022.027.450
    #     environment:
    #         - PUID=1000
    #         - PGID=1000
    #         - TZ=Pacific/Auckland
    #         - RCLONE_MOUNT_TARGET=/config/jotta
    #         - RCLONE_MOUNT_DIR=jotta:/
    #     volumes:
    #         - /mnt/data/webtop:/config
    #     ports:
    #         - 3000:3000
    #     shm_size: "1gb"
    #     restart: always
    #     devices:
    #         - /dev/fuse            
    #     cap_add:
    #         - SYS_ADMIN            
    #     security_opt:
    #         - apparmor:unconfined     
    #         - seccomp:unconfined               

    # cloudflare_webtop:
    #     image: jonoh/cloudflared:2022.2.1
    #     volumes:
    #         - /mnt/data/cloudflare_webtop:/config        
    #     environment:
    #         - TZ=Pacific/Auckland
    #         - TUNNEL_URL=http://webtop:3000
    #         - ACCOUNT_ID=${CF_ACCOUNT_ID}
    #         - TUNNEL_NAME=webtop
    #         - TUNNEL_ID=${WEBTOP_TUNNEL_ID}
    #         - TUNNEL_SECRET=${WEBTOP_TUNNEL_SECRET}
    #     restart: always

    yt_cast:
        image: jonoh/yt-cast:0.4.9
        container_name: yt_cast
        volumes: 
            - /tmp/yt_cast:/tmp
        environment:
            - ROCKET_ADDRESS=0.0.0.0
            - ROCKET_BASE_URL=${YT_CAST_BASE_URL}
            - ROCKET_CHANNEL_WHITELIST=${YT_CAST_CHANNEL_WHITELIST}
        restart: always

    cloudflare_yt_cast:
        image: jonoh/cloudflared:2022.3.0
        volumes:
            - /mnt/data/cloudflare_yt_cast:/config
        environment:
            - TZ=Pacific/Auckland
            - TUNNEL_URL=http://yt_cast:8000
            - ACCOUNT_ID=${CF_ACCOUNT_ID}
            - TUNNEL_NAME=yt-cast
            - TUNNEL_ID=${YT_CAST_TUNNEL_ID}
            - TUNNEL_SECRET=${YT_CAST_TUNNEL_SECRET}
        restart: always

    # vscode:
    #     image: jonoh/vscode:v0.0.5
    #     restart: always
    #     volumes:
    #         - /mnt/data:/mnt/data
    #         - /tmp:/tmp
    #         - /mnt/data/repos:/home/workspace            
    #     environment:
    #         - TZ=Pacific/Auckland
    #     networks:
    #         - code
    
    # cloudflare_vscode:
    #     image: jonoh/cloudflared:2022.2.1
    #     restart: always
    #     volumes:
    #         - /mnt/data/cloudflare_vscode:/config
    #     environment:
    #         - TZ=Pacific/Auckland
    #         - TUNNEL_URL=http://vscode:3000
    #         - ACCOUNT_ID=${CF_ACCOUNT_ID}
    #         - TUNNEL_NAME=code
    #         - TUNNEL_ID=${CODE_TUNNEL_ID}
    #         - TUNNEL_SECRET=${CODE_TUNNEL_SECRET}
    #     networks:
    #         - code

    # vaultwarden:
    #     image: vaultwarden/server:1.24.0
    #     restart: always
    #     volumes:
    #         - /mnt/data/vaultwarden:/data
    #     environment:
    #         - DISABLE_ADMIN_TOKEN=true
    #     networks:
    #         - vaultwarden

    # cloudflare_vaultwarden:
    #     image: jonoh/cloudflared:2022.2.1
    #     restart: always
    #     volumes:
    #         - /mnt/data/cloudflare_vaultwarden:/config
    #     environment:
    #         - TZ=Pacific/Auckland
    #         - TUNNEL_URL=http://vaultwarden:80
    #         - ACCOUNT_ID=${CF_ACCOUNT_ID}
    #         - TUNNEL_NAME=vault
    #         - TUNNEL_ID=${VAULT_TUNNEL_ID}
    #         - TUNNEL_SECRET=${VAULT_TUNNEL_SECRET}
    #     networks:
    #       - vaultwarden
